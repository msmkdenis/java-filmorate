CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID   BIGINT AUTO_INCREMENT,
    EMAIL     CHARACTER VARYING(200) NOT NULL,
    LOGIN     CHARACTER VARYING(200) NOT NULL,
    USER_NAME CHARACTER VARYING(200) NOT NULL,
    BIRTHDAY  DATE,
    CONSTRAINT USERS_PK
        PRIMARY KEY (USER_ID)
);

CREATE UNIQUE INDEX IF NOT EXISTS USERS_EMAIL_UINDEX
    ON USERS (EMAIL);

CREATE UNIQUE INDEX IF NOT EXISTS USERS_LOGIN_UINDEX
    ON USERS (LOGIN);

CREATE TABLE IF NOT EXISTS MPA
(
    MPA_ID   BIGINT AUTO_INCREMENT,
    MPA_NAME CHARACTER VARYING(200) NOT NULL,
    CONSTRAINT MPA_PK
        PRIMARY KEY (MPA_ID)
);

CREATE UNIQUE INDEX IF NOT EXISTS MPA_MPA_NAME_UINDEX
    ON MPA (MPA_NAME);

CREATE TABLE IF NOT EXISTS FILMS
(

    FILM_ID       BIGINT AUTO_INCREMENT,
    FILM_NAME     CHARACTER VARYING(255) NOT NULL,
    DESCRIPTION   CHARACTER VARYING(200) NOT NULL,
    RELEASE_DATE  DATE NOT NULL,
    DURATION      INTEGER NOT NULL,
    MPA_ID        BIGINT NOT NULL,
    CONSTRAINT FILMS_PK
        PRIMARY KEY (FILM_ID),
    FOREIGN KEY (MPA_ID) REFERENCES MPA (MPA_ID) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID   BIGINT AUTO_INCREMENT,
    GENRE_NAME CHARACTER VARYING(200) NOT NULL,
    CONSTRAINT GENRE_PK
        PRIMARY KEY (GENRE_ID)
);

CREATE UNIQUE INDEX IF NOT EXISTS GENRES_GENRE_NAME_UINDEX
    on GENRES (GENRE_NAME);

CREATE TABLE IF NOT EXISTS FILM_GENRES
(
    FILM_ID  BIGINT NOT NULL,
    GENRE_ID BIGINT NOT NULL,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE,
    PRIMARY KEY (FILM_ID, GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDS
(
    USER_ID   BIGINT NOT NULL,
    FRIEND_ID BIGINT NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    PRIMARY KEY (USER_ID, FRIEND_ID)
);

CREATE TABLE IF NOT EXISTS FILMS_LIKES
(
    USER_ID BIGINT NOT NULL,
    FILM_ID BIGINT NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    PRIMARY KEY (USER_ID, FILM_ID)
);

CREATE TABLE IF NOT EXISTS DIRECTORS
(
    DIRECTOR_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    NAME        VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS_DIRECTORS
(
    FILM_ID     BIGINT REFERENCES FILMS(FILM_ID) ON DELETE CASCADE,
    DIRECTOR_ID BIGINT REFERENCES DIRECTORS(DIRECTOR_ID) ON DELETE CASCADE,
    CONSTRAINT FILMS_DIRECTORS_PK
        PRIMARY KEY (FILM_ID, DIRECTOR_ID)
);

CREATE TABLE IF NOT EXISTS REVIEWS
(
    REVIEW_ID BIGINT AUTO_INCREMENT,
    CONTENT CHARACTER VARYING(255) NOT NULL,
    IS_POSITIVE BOOLEAN NOT NULL,
    USER_ID BIGINT NOT NULL,
    FILM_ID BIGINT NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    CONSTRAINT REVIEWS_PK
        PRIMARY KEY (REVIEW_ID)
);

CREATE TABLE IF NOT EXISTS REVIEW_LIKES
(
    REVIEW_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    FOREIGN KEY (REVIEW_ID) REFERENCES REVIEWS (REVIEW_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    PRIMARY KEY (REVIEW_ID, USER_ID)
);

CREATE TABLE IF NOT EXISTS REVIEW_DISLIKES
(
    REVIEW_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    FOREIGN KEY (REVIEW_ID) REFERENCES REVIEWS (REVIEW_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    PRIMARY KEY (REVIEW_ID, USER_ID)
);

CREATE TABLE IF NOT EXISTS EVENTS
(
    EVENT_ID   BIGINT PRIMARY KEY AUTO_INCREMENT,
    TIMESTAMP  LONG,
    USER_ID    BIGINT,
    EVENT_TYPE VARCHAR,
    OPERATION  VARCHAR,
    ENTITY_ID  BIGINT,
    CONSTRAINT FK_USER FOREIGN KEY (USER_ID)
        REFERENCES USERS (USER_ID)
        ON DELETE CASCADE,
    CONSTRAINT EV_TYPE CHECK (EVENT_TYPE IN ('LIKE', 'REVIEW', 'FRIEND')),
    CONSTRAINT OP_TYPE CHECK (OPERATION IN ('REMOVE', 'ADD', 'UPDATE'))
)